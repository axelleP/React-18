{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Results\\\\Results.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport '../../styles/Results.css';\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context/context';\nimport { useFetch } from '../../utils/hooks/hooks'; //formatte le titre de chaque métier renvoyés par la liste de résultats\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function formatJobList(title, listLength, index) {\n  if (index === listLength - 1) {\n    return title;\n  }\n\n  return `${title},`;\n} //formate les réponses pour les passer dans l'url\n\nfunction formatFetchParams(answers) {\n  const answerNumbers = Object.keys(answers); //numéros des réponses\n\n  /* reduce ((boucle sur les n° de réponses):\n   * previousParams = paramètres de l'url se mettant à jour à chq boucle. Initialisé à ''\n   * answerNumber = le numéro de la réponse active\n  */\n\n  return answerNumbers.reduce((previousParams, answerNumber, index) => {\n    const isFirstParam = index === 0;\n    const separator = isFirstParam ? '' : '&';\n    return `${previousParams}${separator}a${answerNumber}=${answers[answerNumber]}`;\n  }, '');\n}\n\nfunction Results() {\n  _s();\n\n  const {\n    answers\n  } = useContext(SurveyContext); //récupération des réponses du questionnaire\n\n  const fetchParams = formatFetchParams(answers); //mise en forme des paramètres pour l'url\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/results?${fetchParams}`); //appel API\n\n  const {\n    resultsData\n  } = data; //rappel : le nom de la var doit être la même que le nom renvoyé par l'API\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(LoaderWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row p-5 align-items-center bg-grey\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center h2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Les comp\\xE9tences dont vous avez besoin :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coloredText\",\n        children: resultsData && resultsData.map((_ref, index) => {\n          let {\n            title\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatJobList(title, resultsData.length, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/freelances\",\n          className: \"mt-5 px-5 btn rounded-pill bg-purple\",\n          children: \"D\\xE9couvrez nos profils\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), resultsData && resultsData.map((_ref2, index) => {\n      let {\n        title,\n        description\n      } = _ref2;\n      return (\n        /*#__PURE__*/\n\n        /* boucle sur le tableau cart et affiche les éléments */\n        _jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-sm-10 col-md-8 col-lg-6 mt-5 mx-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"coloredText\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pResults\",\n              children: [description, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      );\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Results, \"8W59HIEqyua3u+tXs89YzKZuCxY=\", false, function () {\n  return [useFetch];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Results/Results.jsx"],"names":["Link","useContext","SurveyContext","useFetch","formatJobList","title","listLength","index","formatFetchParams","answers","answerNumbers","Object","keys","reduce","previousParams","answerNumber","isFirstParam","separator","Results","fetchParams","data","isLoading","error","resultsData","map","length","description"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\nimport '../../styles/Results.css';\nimport { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context/context'\nimport { useFetch } from '../../utils/hooks/hooks'\n\n//formatte le titre de chaque métier renvoyés par la liste de résultats\nexport function formatJobList(title, listLength, index) {\n    if (index === listLength - 1) {\n        return title\n    }\n    return `${title},`\n}\n\n//formate les réponses pour les passer dans l'url\nfunction formatFetchParams(answers) {\n    const answerNumbers = Object.keys(answers)//numéros des réponses\n\n    /* reduce ((boucle sur les n° de réponses):\n     * previousParams = paramètres de l'url se mettant à jour à chq boucle. Initialisé à ''\n     * answerNumber = le numéro de la réponse active\n    */\n    return answerNumbers.reduce((previousParams, answerNumber, index) => {\n        const isFirstParam = index === 0\n        const separator = isFirstParam ? '' : '&'\n        \n        return `${previousParams}${separator}a${answerNumber}=${answers[answerNumber]}`\n    }, '')\n}\n\nfunction Results() {\n    const { answers } = useContext(SurveyContext)//récupération des réponses du questionnaire\n    const fetchParams = formatFetchParams(answers)//mise en forme des paramètres pour l'url\n    const { data, isLoading, error } = useFetch(`http://localhost:8000/results?${fetchParams}`)//appel API\n    const { resultsData } = data//rappel : le nom de la var doit être la même que le nom renvoyé par l'API\n       \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }\n    \n    return isLoading ? (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  ) : (\n        <div className=\"row p-5 align-items-center bg-grey\">\n            <div className=\"text-center h2\">\n                <span>Les compétences dont vous avez besoin :</span>\n                <div className=\"coloredText\">\n                {/* boucle et affiche le titre de chaque résultats */}\n                {resultsData && resultsData.map(({ title }, index) => (\n                    <span key={index}>{formatJobList(title, resultsData.length, index)}</span>\n                ))}\n                </div>\n                <div><Link to=\"/freelances\" className=\"mt-5 px-5 btn rounded-pill bg-purple\">Découvrez nos profils</Link></div>\n            </div>\n            \n            {/* boucle et affiche le titre et la description de chaque résultats */}\n            {resultsData && resultsData.map(({ title, description }, index) => (/* boucle sur le tableau cart et affiche les éléments */\n                <div key={index} className=\"row justify-content-center\">\n                    <div className=\"col-12 col-sm-10 col-md-8 col-lg-6 mt-5 mx-5\">\n                        <span className=\"coloredText\">{ title }</span>\n                        <p className=\"pResults\">{ description }.</p>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}