{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\utils\\\\context\\\\context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/React.createContext({\n  foreground: '#ffffff',\n  background: '#222222'\n}); //contexte theme pour le site\n\n/* provider pour le contexte theme */\n\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState('light'); //state theme\n\n  const toggleTheme = () => {\n    //remplace la valeur su state theme selon sa valeur actuelle\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/utils/context/context.jsx"],"names":["React","useState","createContext","ThemeContext","foreground","background","ThemeProvider","children","theme","setTheme","toggleTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AACA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACE,aAAN,CAAoB;AAC5CE,EAAAA,UAAU,EAAE,SADgC;AAE5CC,EAAAA,UAAU,EAAE;AAFgC,CAApB,CAArB,C,CAGH;;AAEJ;;AACA,OAAO,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAlC,CAD2C,CACA;;AAC3C,QAAMS,WAAW,GAAG,MAAM;AAAC;AACvBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA9B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAXM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { useState, createContext } from 'react'\nexport const ThemeContext = React.createContext({\n    foreground: '#ffffff',\n    background: '#222222',\n  })//contexte theme pour le site\n\n/* provider pour le contexte theme */\nexport const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState('light')//state theme\n    const toggleTheme = () => {//remplace la valeur su state theme selon sa valeur actuelle\n        setTheme(theme === 'light' ? 'dark' : 'light')\n    }\n \n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}