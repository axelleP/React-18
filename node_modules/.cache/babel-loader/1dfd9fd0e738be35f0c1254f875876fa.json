{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams, useNavigate } from 'react-router-dom'; //useParams pour récupérer les params de l'url\n\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context/context';\nimport { useFetch } from '../../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //    const { surveyData } = {}\n  //récupère les données API, le statut du chargement et le statut de l'erreur\n  //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/survey`);\n  const {\n    surveyData\n  } = data;\n  /*\n    récupère la fonction saveAnswers via SurveyContext\n    ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx\n  */\n\n  const {\n    saveAnswers\n  } = useContext(SurveyContext);\n  let navigate = useNavigate(); //sauvegarde la réponse à la question et redirige sur la page des résultats si besoin\n\n  function saveReply(event, answer) {\n    saveAnswers({\n      [questionNumberInt]: answer\n    }); //s'il n'y a plus d'autres questions\n\n    if (!surveyData[questionNumberInt + 1]) {\n      event.preventDefault(); //stop le traitement après le click\n\n      navigate(\"/results\", {\n        replace: true\n      }); //redirection\n    }\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData && surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        to: `/survey/${next}`,\n        onClick: e => saveReply(e, true),\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        to: `/survey/${next}`,\n        onClick: e => saveReply(e, false),\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt !== 1 && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        children: \"Pr\\xE9c\\xE9dente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }, this), surveyData && surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        children: \"Suivante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"xJMoBJg+DJzcdrD0uRhWDbwkZFQ=\", false, function () {\n  return [useParams, useFetch, useNavigate];\n});\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["useParams","useNavigate","Link","useContext","SurveyContext","useFetch","Survey","questionNumber","questionNumberInt","parseInt","previous","next","data","isLoading","error","surveyData","saveAnswers","navigate","saveReply","event","answer","preventDefault","replace","e"],"mappings":"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","sourcesContent":["import { useParams, useNavigate } from 'react-router-dom'//useParams pour récupérer les params de l'url\nimport { Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context/context'\nimport { useFetch } from '../../utils/hooks/hooks'\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n//    const { surveyData } = {}\n    //récupère les données API, le statut du chargement et le statut de l'erreur\n    //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n    const { data, isLoading, error } = useFetch(`http://localhost:8000/survey`)\n    const { surveyData } = data\n    /*\n      récupère la fonction saveAnswers via SurveyContext\n      ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx\n    */\n    const { saveAnswers } = useContext(SurveyContext)\n    \n    let navigate = useNavigate();\n    \n    //sauvegarde la réponse à la question et redirige sur la page des résultats si besoin\n    function saveReply(event, answer) {        \n        saveAnswers({ [questionNumberInt]: answer })\n        \n        //s'il n'y a plus d'autres questions\n        if (!(surveyData[questionNumberInt + 1])) {\n            event.preventDefault();//stop le traitement après le click\n            navigate(\"/results\", { replace: true });//redirection\n        }\n    }\n    \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }\n     \n    //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n    return (\n        <div className=\"text-center\">\n            {/* question */}\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            \n            {isLoading ? (\n                <div className=\"spinner-border\" role=\"status\"></div>\n            ) : (\n                <div className=\"mt-5\">{surveyData && surveyData[questionNumberInt]}</div>\n            )}\n            \n            {/* boutons Oui et Non */}\n            <div className=\"row mt-5 justify-content-center\">\n                <Link className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" to={`/survey/${next}`} onClick={(e) => saveReply(e, true)}>Oui</Link>\n                <div className=\"col-auto\"></div>\n                <Link className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" to={`/survey/${next}`} onClick={(e) => saveReply(e, false)}>Non</Link>\n            </div>\n            \n            {/* liens */}\n            <div className=\"mt-5\">\n                {/* affiche Précédente si on est pas à la question 1 */ }\n                {questionNumberInt !== 1 && <Link className=\"mx-5 link\" to={`/survey/${previous}`}>Précédente</Link>}\n                {/* affiche Suivante si question +1 existe */}\n                {(surveyData && surveyData[questionNumberInt + 1]) && <Link className=\"mx-5 link\" to={`/survey/${next}`}>Suivante</Link>}\n            </div>\n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}