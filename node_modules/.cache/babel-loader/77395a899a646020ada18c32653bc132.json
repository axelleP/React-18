{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom'; //useParams pour récupérer les params de l'url\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //questions\n\n  const [surveyData, setSurveyData] = useState({}); //note : surveyData renvoi une réponse {}\n  //affiche un loader si la page met du temps à charger la question\n\n  const [isDataLoading, setDataLoading] = useState(false); //error API\n\n  const [error, setError] = useState(false);\n  /*\n    récupère la fonction saveAnswers et le state answers via SurveyContext\n    ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx\n  */\n\n  const {\n    saveAnswers,\n    answers\n  } = useContext(SurveyContext); //récupère les questions par l'API dont l'adresse est http://localhost:8000\n  //ne pas oublier de lancer 7150606-API-React-intermediaire en console\n\n  useEffect(() => {\n    setDataLoading(true); //affiche le loader\n\n    fetch(`http://localhost:8000/survey`).then(response => response.json() //convertit la réponse en données JSON\n    .then(_ref => {\n      let {\n        surveyData\n      } = _ref;\n      //traite les données reçues\n      setSurveyData(surveyData);\n    }).catch(error => {\n      //attrape les erreurs lors de l’appel de l’API s'il y en a\n      console.log(error);\n      setError(error);\n    }));\n    setTimeout(() => {\n      setDataLoading(false);\n    }, 500); //enlève le loader. setTimeout sert juste à confirmer l'affichage du loader en cas de délai de chargement des données\n  }, []); //[] : exécute un effet uniquement au premier rendu du composant\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  } //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), isDataLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveAnswers({\n          [questionNumberInt]: true\n        }),\n        selected: answers[questionNumberInt] === true,\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveAnswers({\n          [questionNumberInt]: false\n        }),\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt !== 1 && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        children: \"Pr\\xE9c\\xE9dente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        children: \"Suivante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        className: \"mx-5 link\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"ajNQJGJV+zW3th4HnfEB1DzGybE=\", false, function () {\n  return [useParams];\n});\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["useParams","useState","useEffect","Link","useContext","SurveyContext","Survey","questionNumber","questionNumberInt","parseInt","previous","next","surveyData","setSurveyData","isDataLoading","setDataLoading","error","setError","saveAnswers","answers","fetch","then","response","json","catch","console","log","setTimeout","e"],"mappings":"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","sourcesContent":["import { useParams } from 'react-router-dom'//useParams pour récupérer les params de l'url\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context/context'\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n    //questions\n    const [surveyData, setSurveyData] = useState({})//note : surveyData renvoi une réponse {}\n    //affiche un loader si la page met du temps à charger la question\n    const [isDataLoading, setDataLoading] = useState(false)\n    //error API\n    const [error, setError] = useState(false)\n    /*\n      récupère la fonction saveAnswers et le state answers via SurveyContext\n      ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx\n    */\n    const { saveAnswers, answers } = useContext(SurveyContext)\n    \n    //récupère les questions par l'API dont l'adresse est http://localhost:8000\n    //ne pas oublier de lancer 7150606-API-React-intermediaire en console\n    useEffect(() => {\n        setDataLoading(true)//affiche le loader\n\n        fetch(`http://localhost:8000/survey`)\n            .then((response) => response.json()//convertit la réponse en données JSON\n            .then(({ surveyData }) => {//traite les données reçues\n                setSurveyData(surveyData)\n            })\n            .catch((error) => {//attrape les erreurs lors de l’appel de l’API s'il y en a\n                console.log(error)\n                setError(error)\n            })\n        )\n\n        setTimeout(() => {setDataLoading(false)}, 500)//enlève le loader. setTimeout sert juste à confirmer l'affichage du loader en cas de délai de chargement des données\n     }, [])//[] : exécute un effet uniquement au premier rendu du composant\n     \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }\n     \n    //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n    return (\n        <div className=\"text-center\">\n            {/* question */}\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            \n            {isDataLoading ? (\n                <div className=\"spinner-border\" role=\"status\"></div>\n            ) : (\n                <div className=\"mt-5\">{surveyData[questionNumberInt]}</div>\n            )}\n            \n            {/* boutons Oui et Non */}\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" \n                onClick={(e) => saveAnswers({ [questionNumberInt]: true })}\n                selected={answers[questionNumberInt] === true}>Oui</div>\n                <div className=\"col-auto\"></div>\n                <div className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" onClick={(e) => saveAnswers({ [questionNumberInt]: false })}>Non</div>\n            </div>\n            \n            {/* liens */}\n            <div className=\"mt-5\">\n                {/* affiche Précédente si on est pas à la question 1 */ }\n                {questionNumberInt !== 1 && <Link className=\"mx-5 link\" to={`/survey/${previous}`}>Précédente</Link>}\n                {/* affiche soit Suivante soit Résultats selon si la question +1 existe */}\n                {surveyData[questionNumberInt + 1] ? (\n                    <Link className=\"mx-5 link\" to={`/survey/${next}`}>Suivante</Link>\n                ) : (\n                    <Link to=\"/results\" className=\"mx-5 link\">Résultats</Link>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}