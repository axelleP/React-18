{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\utils\\\\context\\\\context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState } from 'react'; //contexte theme pour le site\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext('light');\n/* provider pour le contexte theme */\n\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState('light'); //state theme light par défaut\n\n  const toggleTheme = () => {\n    //remplace la valeur du state theme selon sa valeur actuelle\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = ThemeProvider;\nexport const SurveyContext = /*#__PURE__*/createContext([]);\n/* provider pour le contexte survey */\n\nexport const SurveyProvider = _ref2 => {\n  _s2();\n\n  let {\n    children\n  } = _ref2;\n  const [results, setResults] = useState([]);\n  return /*#__PURE__*/_jsxDEV(SurveyContext.Provider, {\n    value: {\n      results\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SurveyProvider, \"QYmH5xyAMv1uIO9V7tguRx7oNwo=\");\n\n_c2 = SurveyProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThemeProvider\");\n$RefreshReg$(_c2, \"SurveyProvider\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/utils/context/context.jsx"],"names":["createContext","useState","ThemeContext","ThemeProvider","children","theme","setTheme","toggleTheme","SurveyContext","SurveyProvider","results","setResults"],"mappings":";;;;AAAA,SAASA,aAAT,EAAyBC,QAAzB,QAAwC,OAAxC,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,CAAC,OAAD,CAAlC;AAEP;;AACA,OAAO,MAAMG,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,OAAD,CAAlC,CAD2C,CACA;;AAC3C,QAAMM,WAAW,GAAG,MAAM;AAAC;AACvBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA9B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAXM;;GAAMD,a;;KAAAA,a;AAab,OAAO,MAAMK,aAAa,gBAAGR,aAAa,CAAC,EAAD,CAAnC;AAEP;;AACA,OAAO,MAAMS,cAAc,GAAG,SAAkB;AAAA;;AAAA,MAAjB;AAAEL,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAES,MAAAA;AAAF,KAA/B;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARM;;IAAMK,c;;MAAAA,c","sourcesContent":["import { createContext,  useState} from 'react'\n\n//contexte theme pour le site\nexport const ThemeContext = createContext('light')\n\n/* provider pour le contexte theme */\nexport const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState('light')//state theme light par défaut\n    const toggleTheme = () => {//remplace la valeur du state theme selon sa valeur actuelle\n        setTheme(theme === 'light' ? 'dark' : 'light')\n    }\n \n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>{/* le provider permet l'accès à theme et toggleTheme à ses enfants */}\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport const SurveyContext = createContext([])\n\n/* provider pour le contexte survey */\nexport const SurveyProvider = ({ children }) => {\n    const [results, setResults] = useState([])\n \n    return (\n        <SurveyContext.Provider value={{ results }}>\n            {children}\n        </SurveyContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}