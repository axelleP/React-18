{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useEffect } from 'react'; //useParams pour récupérer les params de l'url, useNavigate pour changer de page\n\nimport { useParams, useNavigate, Link } from 'react-router-dom'; //import { Link } from 'react-router-dom'\n\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context/context';\nimport { useFetch } from '../../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //récupère les données API, le statut du chargement et le statut de l'erreur\n  //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/survey`);\n  /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n  avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n  //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n\n  const {\n    surveyData\n  } = data;\n  /* récupère la fonction saveAnswers via SurveyContext\n  ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n\n  const {\n    saveAnswers,\n    answers\n  } = useContext(SurveyContext);\n  let navigate = useNavigate();\n  const Button = styled.button`\n        box-shadow: ${props => props.isSelected ? `0px 0px 0px 2px #5843e4 inset` : 'none'};\n    `; //met en forme les bouttons qui ont été sélectionnés\n\n  useEffect(() => {\n    saveAnswers({});\n  }, []); //sauvegarde la réponse à la question\n\n  function saveReply(event, answer) {\n    saveAnswers({\n      [questionNumberInt]: answer\n    }); //        const buttons = document.querySelectorAll(\"button\")\n    //        const target = event.target\n    //        \n    //        for (const button of buttons) {\n    //            if (target.innerHTML === button.innerHTML) {\n    //                target.classList.add(\"selected\")\n    //            } else {\n    //                button.classList.remove(\"selected\")\n    //            }\n    //        };\n    //Je laisse en exemple mais je ne m'en sert plus\n    //s'il n'y a plus d'autres questions\n    //        if (!(surveyData[questionNumberInt + 1])) {\n    //            event.preventDefault();//stop le traitement après le click\n    //            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n    //        }\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  } //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData && surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"buttonTrue\",\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, true),\n        isSelected: answers[questionNumber] === true,\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"buttonFalse\",\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, false),\n        isSelected: answers[questionNumber] === false,\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-5 link\",\n        children: \"R\\xE9initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        children: \"Pr\\xE9c\\xE9dente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this), surveyData && surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        children: \"Suivante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 69\n      }, this), surveyData && !surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"1q7nz8pHB8c/qPO00QoycqW1q6Y=\", false, function () {\n  return [useParams, useFetch, useNavigate];\n});\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["styled","useEffect","useParams","useNavigate","Link","useContext","SurveyContext","useFetch","Survey","questionNumber","questionNumberInt","parseInt","previous","next","data","isLoading","error","surveyData","saveAnswers","answers","navigate","Button","button","props","isSelected","saveReply","event","answer","e"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { useEffect } from 'react'\n//useParams pour récupérer les params de l'url, useNavigate pour changer de page\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n//import { Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context/context'\nimport { useFetch } from '../../utils/hooks/hooks'\n\n\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n    //récupère les données API, le statut du chargement et le statut de l'erreur\n    //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n    const { data, isLoading, error } = useFetch(`http://localhost:8000/survey`)\n    /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n    avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n    //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n    const { surveyData } = data \n    /* récupère la fonction saveAnswers via SurveyContext\n    ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n    const { saveAnswers, answers } = useContext(SurveyContext)\n    \n    let navigate = useNavigate();\n    \n    const Button = styled.button`\n        box-shadow: ${(props) => props.isSelected ? `0px 0px 0px 2px #5843e4 inset` : 'none'};\n    `\n    \n    //met en forme les bouttons qui ont été sélectionnés\n    useEffect(() => {\n        saveAnswers({})\n    }, []);\n    \n    //sauvegarde la réponse à la question\n    function saveReply(event, answer) {\n        saveAnswers({ [questionNumberInt]: answer })\n        \n//        const buttons = document.querySelectorAll(\"button\")\n//        const target = event.target\n//        \n//        for (const button of buttons) {\n//            if (target.innerHTML === button.innerHTML) {\n//                target.classList.add(\"selected\")\n//            } else {\n//                button.classList.remove(\"selected\")\n//            }\n//        };\n        \n        //Je laisse en exemple mais je ne m'en sert plus\n        //s'il n'y a plus d'autres questions\n//        if (!(surveyData[questionNumberInt + 1])) {\n//            event.preventDefault();//stop le traitement après le click\n//            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n//        }\n    }\n   \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }  \n            \n    //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n    return (\n        <div className=\"text-center\">\n            {/* question */}\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            \n            {isLoading ? (\n                <div className=\"spinner-border\" role=\"status\"></div>\n            ) : (\n                <div className=\"mt-5\">{surveyData && surveyData[questionNumberInt]}</div>\n            )}\n            \n            {/* boutons Oui et Non */}\n            <div className=\"row mt-5 justify-content-center\">\n                <Button id=\"buttonTrue\" className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" \n                onClick={(e) => saveReply(e, true)}\n                isSelected={answers[questionNumber] === true}\n                >Oui</Button>\n                <div className=\"col-auto\"></div>\n                <Button id=\"buttonFalse\" className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" \n                onClick={(e) => saveReply(e, false)}\n                isSelected={answers[questionNumber] === false}\n                >Non</Button>\n            </div>\n            \n            {/* liens */}\n            <div className=\"mt-5\">\n\n                {questionNumberInt === 1 \n                ? <span className=\"mx-5 link\" >Réinitialiser</span>\n                : <Link className=\"mx-5 link\" to={`/survey/${previous}`}>Précédente</Link>\n                }\n                \n                \n                {surveyData && surveyData[questionNumberInt + 1] && <Link className=\"mx-5 link\" to={`/survey/${next}`}>Suivante</Link>}\n                {surveyData && !(surveyData[questionNumberInt + 1]) && <Link className=\"mx-5 link\" to=\"/results\">Résultats</Link>}\n            </div>\n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}