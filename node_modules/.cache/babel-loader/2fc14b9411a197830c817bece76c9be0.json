{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//hook personnalisé : création d'un code réutilisable dans toute l'application\nimport { useState, useEffect } from 'react'; //récupère les données d'une API\n\nexport function useFetch(url) {\n  _s();\n\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(false); //indique si les données sont en train de se charger\n\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true); //affiche le loader\n\n    fetch(url).then(response => response.json()) //convertit la réponse en données JSON\n    .then(data => {\n      //traite les données reçues\n      setData(data);\n    }).catch(error => {\n      console.log(error);\n      setError(true);\n    }); //enlève le loader. setTimeout sert juste à confirmer l'affichage du loader en simulant un délai de chargement\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 100);\n  }, [url]); //déclenche l'appel de useEffect si l'url change\n\n  return {\n    isLoading,\n    data,\n    error\n  };\n} //Exemple n°2\n\n_s(useFetch, \"kYknsBEF+Hl6WNY7Rqr4TzyRBlc=\");\n\nexport function useFetch2(url) {\n  _s2();\n\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(false); //indique si les données sont en train de se charger\n\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true); //affiche le loader\n    //déclaration de la fonction fetchData\n\n    async function fetchData() {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setData(data);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        //traitement après l'appel\n        setLoading(false);\n      }\n    }\n\n    fetchData(); //appel de la fonction fetchData\n  }, [url]); //déclenche l'appel de useEffect si l'url change\n\n  return {\n    isLoading,\n    data,\n    error\n  };\n}\n\n_s2(useFetch2, \"kYknsBEF+Hl6WNY7Rqr4TzyRBlc=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setLoading","error","setError","fetch","then","response","json","catch","console","log","setTimeout","useFetch2","fetchData","err"],"sources":["C:/wamp64/www/shiny-agency/src/utils/hooks/hooks.jsx"],"sourcesContent":["//hook personnalisé : création d'un code réutilisable dans toute l'application\nimport { useState, useEffect } from 'react'\n\n//récupère les données d'une API\nexport function useFetch(url) {\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(false)//indique si les données sont en train de se charger\n    const [error, setError] = useState(false)\n\n    useEffect(() => {\n        if (!url) return\n        \n        setLoading(true)//affiche le loader\n        \n        fetch(url)\n            .then((response) => response.json())//convertit la réponse en données JSON\n            .then((data) => {//traite les données reçues\n                setData(data)\n                \n            })\n            .catch((error) => {\n                console.log(error)\n                setError(true)\n            })\n        \n        //enlève le loader. setTimeout sert juste à confirmer l'affichage du loader en simulant un délai de chargement\n        setTimeout(() => {setLoading(false)}, 100)\n    }, [url])//déclenche l'appel de useEffect si l'url change\n\n    return {isLoading, data, error}\n}\n\n//Exemple n°2\nexport function useFetch2(url) {\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(false)//indique si les données sont en train de se charger\n    const [error, setError] = useState(false)\n\n    useEffect(() => {\n        if (!url) return\n        \n        setLoading(true)//affiche le loader\n     \n        //déclaration de la fonction fetchData\n        async function fetchData() {\n            try {\n                const response = await fetch(url)\n                const data = await response.json()\n                setData(data)\n            } catch (err) {\n                console.log(err)\n                setError(true)\n            } finally {//traitement après l'appel\n                setLoading(false)\n            }\n        }\n    \n        fetchData()//appel de la fonction fetchData\n    }, [url])//déclenche l'appel de useEffect si l'url change\n    \n    return { isLoading, data, error }\n}"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAF0B,CAEqB;;EAC/C,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACE,GAAL,EAAU;IAEVI,UAAU,CAAC,IAAD,CAAV,CAHY,CAGI;;IAEhBG,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EACwC;IADxC,CAEKF,IAFL,CAEWP,IAAD,IAAU;MAAC;MACbC,OAAO,CAACD,IAAD,CAAP;IAEH,CALL,EAMKU,KANL,CAMYN,KAAD,IAAW;MACdO,OAAO,CAACC,GAAR,CAAYR,KAAZ;MACAC,QAAQ,CAAC,IAAD,CAAR;IACH,CATL,EALY,CAgBZ;;IACAQ,UAAU,CAAC,MAAM;MAACV,UAAU,CAAC,KAAD,CAAV;IAAkB,CAA1B,EAA4B,GAA5B,CAAV;EACH,CAlBQ,EAkBN,CAACJ,GAAD,CAlBM,CAAT,CAL0B,CAuBjB;;EAET,OAAO;IAACG,SAAD;IAAYF,IAAZ;IAAkBI;EAAlB,CAAP;AACH,C,CAED;;GA5BgBN,Q;;AA6BhB,OAAO,SAASgB,SAAT,CAAmBf,GAAnB,EAAwB;EAAA;;EAC3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAF2B,CAEoB;;EAC/C,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACE,GAAL,EAAU;IAEVI,UAAU,CAAC,IAAD,CAAV,CAHY,CAGI;IAEhB;;IACA,eAAeY,SAAf,GAA2B;MACvB,IAAI;QACA,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACP,GAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMQ,QAAQ,CAACC,IAAT,EAAnB;QACAR,OAAO,CAACD,IAAD,CAAP;MACH,CAJD,CAIE,OAAOgB,GAAP,EAAY;QACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;QACAX,QAAQ,CAAC,IAAD,CAAR;MACH,CAPD,SAOU;QAAC;QACPF,UAAU,CAAC,KAAD,CAAV;MACH;IACJ;;IAEDY,SAAS,GAnBG,CAmBD;EACd,CApBQ,EAoBN,CAAChB,GAAD,CApBM,CAAT,CAL2B,CAyBlB;;EAET,OAAO;IAAEG,SAAF;IAAaF,IAAb;IAAmBI;EAAnB,CAAP;AACH;;IA5BeU,S"},"metadata":{},"sourceType":"module"}