{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components'; //bibliothèque pour utiliser du CSS en JS\n\nimport { useContext } from 'react'; //import { useParams, useNavigate, Link } from 'react-router-dom' => Exemple avec useNavigate\n\nimport { useParams, Link } from 'react-router-dom'; //useParams pour récupérer les params de l'url\n\nimport { SurveyContext } from '../../utils/context/context'; //contexte\n\nimport { useFetch } from '../../utils/hooks/hooks'; //hook personnalisé\n//rque : c'est plus rapide et plus court de cette manière que de faire des fonctions js pour changer le style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n    box-shadow: ${props => props.isSelected ? `0px 0px 0px 2px #5843e4 inset` : 'none'};\n    background-color: ${props => props.isSelected ? `blue` : 'none'};\n`;\n_c = Button;\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //récupère les données API, le statut du chargement et le statut de l'erreur\n  //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/survey`);\n  /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n  avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n  //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n\n  const {\n    surveyData\n  } = data;\n  /* récupère la fonction updateAnswers renvoyé par SurveyProvider() dans le fichier context.jsx\n  ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n\n  const {\n    updateAnswers,\n    answers\n  } = useContext(SurveyContext); //exemple navigation\n  //    let navigate = useNavigate();\n  //réinitialise le questionnaire\n\n  function initSurvey() {\n    updateAnswers({});\n  } //sauvegarde la réponse à la question\n\n\n  function saveReply(event, answer) {\n    updateAnswers({\n      [questionNumberInt]: answer\n    }); //Je laisse en exemple mais je ne m'en sert plus :\n    //s'il n'y a plus d'autres questions\n    //        if (!(surveyData[questionNumberInt + 1])) {\n    //            event.preventDefault();//stop le traitement après le click\n    //            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n    //        }\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n    /* icône de chargement */\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData && surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, true),\n        isSelected: answers[questionNumber] === true,\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, false),\n        isSelected: answers[questionNumber] === false,\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt !== 1 && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }, this), surveyData && surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 69\n      }, this), surveyData && !surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), questionNumberInt === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link pointer\",\n        onClick: initSurvey,\n        children: \"R\\xE9initialiser le questionnaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"WPAY2hlM+20X4sMGs8hVpmzxCU4=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c2 = Survey;\nexport default Survey;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["styled","useContext","useParams","Link","SurveyContext","useFetch","Button","button","props","isSelected","Survey","questionNumber","questionNumberInt","parseInt","previous","next","data","isLoading","error","surveyData","updateAnswers","answers","initSurvey","saveReply","event","answer","e"],"mappings":"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","sourcesContent":["import styled from 'styled-components'//bibliothèque pour utiliser du CSS en JS\nimport { useContext } from 'react'\n//import { useParams, useNavigate, Link } from 'react-router-dom' => Exemple avec useNavigate\nimport { useParams, Link } from 'react-router-dom'//useParams pour récupérer les params de l'url\nimport { SurveyContext } from '../../utils/context/context'//contexte\nimport { useFetch } from '../../utils/hooks/hooks'//hook personnalisé\n\n//rque : c'est plus rapide et plus court de cette manière que de faire des fonctions js pour changer le style\nconst Button = styled.button`\n    box-shadow: ${(props) => props.isSelected ? `0px 0px 0px 2px #5843e4 inset` : 'none'};\n    background-color: ${(props) => props.isSelected ? `blue` : 'none'};\n`\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n    //récupère les données API, le statut du chargement et le statut de l'erreur\n    //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n    const { data, isLoading, error } = useFetch(`http://localhost:8000/survey`)\n    /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n    avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n    //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n    const { surveyData } = data \n    /* récupère la fonction updateAnswers renvoyé par SurveyProvider() dans le fichier context.jsx\n    ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n    const { updateAnswers, answers } = useContext(SurveyContext)\n    \n    //exemple navigation\n//    let navigate = useNavigate();\n    \n    //réinitialise le questionnaire\n    function initSurvey() {\n        updateAnswers({})\n    }\n    \n    //sauvegarde la réponse à la question\n    function saveReply(event, answer) {\n        updateAnswers({ [questionNumberInt]: answer })\n        \n        //Je laisse en exemple mais je ne m'en sert plus :\n        //s'il n'y a plus d'autres questions\n//        if (!(surveyData[questionNumberInt + 1])) {\n//            event.preventDefault();//stop le traitement après le click\n//            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n//        }\n    }\n   \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }  \n\n    return (\n        <div className=\"text-center\">\n            {/* question */}\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            {isLoading ? (\n                <div className=\"spinner-border\" role=\"status\"></div>/* icône de chargement */\n            ) : (\n                <div className=\"mt-5\">{surveyData && surveyData[questionNumberInt]}</div>\n            )}\n            \n            {/* boutons Oui et Non */}\n            <div className=\"row mt-5 justify-content-center\">\n                <Button className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" \n                onClick={(e) => saveReply(e, true)}\n                isSelected={answers[questionNumber] === true}\n                >Oui</Button>\n                <div className=\"col-auto\"></div>\n                <Button className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" \n                onClick={(e) => saveReply(e, false)}\n                isSelected={answers[questionNumber] === false}\n                >Non</Button>\n            </div>\n            \n            {/* liens. rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable */}\n            <div className=\"mt-5\">\n                {questionNumberInt !== 1 && <Link className=\"mx-5 link\" to={`/survey/${previous}`}>Précédent</Link>}\n                {surveyData && surveyData[questionNumberInt + 1] && <Link className=\"mx-5 link\" to={`/survey/${next}`}>Suivant</Link>}\n                {surveyData && !(surveyData[questionNumberInt + 1]) && <Link className=\"mx-5 link\" to=\"/results\">Résultats</Link>}\n            </div>\n                    \n            {questionNumberInt === 1  && <div className=\"mt-3\"><span className=\"link pointer\" onClick={initSurvey}>Réinitialiser le questionnaire</span></div>}   \n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}