{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams, useNavigate } from 'react-router-dom'; //useParams pour récupérer les params de l'url\n\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context/context';\nimport { useFetch } from '../../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //récupère les données API, le statut du chargement et le statut de l'erreur\n  //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/survey`);\n  /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n  avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n  //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n\n  const {\n    surveyData\n  } = data;\n  /* récupère la fonction saveAnswers via SurveyContext\n  ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n\n  const {\n    saveAnswers,\n    answers\n  } = useContext(SurveyContext);\n  let navigate = useNavigate();\n\n  function test(event) {\n    //    event.preventDefault();\n    const buttonTrue = document.getElementById('buttonTrue');\n    const buttonFalse = document.getElementById('buttonTrue');\n    console.log(answers[questionNumberInt]);\n    buttonFalse.classList.remove(\"selected\");\n    buttonTrue.classList.remove(\"selected\");\n\n    if (answers[questionNumberInt] === true) {\n      buttonTrue.classList.add(\"selected\");\n      buttonFalse.classList.remove(\"selected\");\n    }\n\n    if (answers[questionNumberInt] === false) {\n      buttonFalse.classList.add(\"selected\");\n      buttonTrue.classList.remove(\"selected\");\n    }\n  } //sauvegarde la réponse à la question et redirige sur la page des résultats si besoin\n\n\n  function saveReply(event, answer) {\n    saveAnswers({\n      [questionNumberInt]: answer\n    });\n    const buttons = document.querySelectorAll(\"button\");\n    const target = event.target;\n\n    for (const button of buttons) {\n      if (target.innerHTML === button.innerHTML) {\n        target.classList.add(\"selected\");\n      } else {\n        button.classList.remove(\"selected\");\n      }\n    }\n\n    ; //Je laisse en exemple mais je ne m'en sert plus\n    //s'il n'y a plus d'autres questions\n    //        if (!(surveyData[questionNumberInt + 1])) {\n    //            event.preventDefault();//stop le traitement après le click\n    //            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n    //        }\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Erreur!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \"\\xA0 Oups il y a eu un probl\\xE8me.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col col-sm-2 col-md-3 col-lg-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  } //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData && surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buttonTrue\",\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, true),\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"buttonFalse\",\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey button\",\n        onClick: e => saveReply(e, false),\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt !== 1 && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        onClick: e => test(e),\n        children: \"Pr\\xE9c\\xE9dente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }, this), surveyData && surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        onClick: e => test(e),\n        children: \"Suivante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 69\n      }, this), surveyData && !surveyData[questionNumberInt + 1] && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"ylND/bCNY5wRTfnHudgqJd3f0ls=\", false, function () {\n  return [useParams, useFetch, useNavigate];\n});\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["useParams","useNavigate","Link","useContext","SurveyContext","useFetch","Survey","questionNumber","questionNumberInt","parseInt","previous","next","data","isLoading","error","surveyData","saveAnswers","answers","navigate","test","event","buttonTrue","document","getElementById","buttonFalse","console","log","classList","remove","add","saveReply","answer","buttons","querySelectorAll","target","button","innerHTML","e"],"mappings":"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","sourcesContent":["import { useParams, useNavigate } from 'react-router-dom'//useParams pour récupérer les params de l'url\nimport { Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context/context'\nimport { useFetch } from '../../utils/hooks/hooks'\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n    //récupère les données API, le statut du chargement et le statut de l'erreur\n    //ne pas oublier de lancer 7150606-API-React-intermediaire en console pour accéder à http://localhost:8000\n    const { data, isLoading, error } = useFetch(`http://localhost:8000/survey`)\n    /* attention surveyData est indéfini tant que data n'est pas initialisé dans l'appel API donc on vérifie que surveyData est définie\n    avant de s'en servir. Ex : surveyData && surveyData[questionNumberInt] */\n    //de plus il faut nommer la var comme dans celle renvoyée par l'API !\n    const { surveyData } = data \n    /* récupère la fonction saveAnswers via SurveyContext\n    ces var sont accessibles car Survey est dans la balise SurveyProvider dans index.jsx */\n    const { saveAnswers, answers } = useContext(SurveyContext)\n    \n    let navigate = useNavigate();\n    \n    function test(event) {\n//    event.preventDefault();\n        const buttonTrue = document.getElementById('buttonTrue')\n        const buttonFalse = document.getElementById('buttonTrue')\n        \n        \n        console.log(answers[questionNumberInt])\n        \n        buttonFalse.classList.remove(\"selected\")\n        buttonTrue.classList.remove(\"selected\")\n        \n        if (answers[questionNumberInt] === true) {\n            buttonTrue.classList.add(\"selected\")\n            buttonFalse.classList.remove(\"selected\")\n        }\n        if (answers[questionNumberInt] === false) {\n            buttonFalse.classList.add(\"selected\")\n            buttonTrue.classList.remove(\"selected\")\n        }\n    \n    }\n    \n    //sauvegarde la réponse à la question et redirige sur la page des résultats si besoin\n    function saveReply(event, answer) {\n        saveAnswers({ [questionNumberInt]: answer })\n        \n        const buttons = document.querySelectorAll(\"button\")\n        const target = event.target\n        \n        for (const button of buttons) {\n            if (target.innerHTML === button.innerHTML) {\n                target.classList.add(\"selected\")\n            } else {\n                button.classList.remove(\"selected\")\n            }\n        };\n        \n        //Je laisse en exemple mais je ne m'en sert plus\n        //s'il n'y a plus d'autres questions\n//        if (!(surveyData[questionNumberInt + 1])) {\n//            event.preventDefault();//stop le traitement après le click\n//            navigate(\"/results\", { replace: true });//redirige sur la page de résultats\n//        }\n    }\n    \n    \n\n       \n\n        \n   \n   \n    if (error) {\n        return (\n            <div className=\"row\">\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n                <span className=\"col-12 col-sm-8 col-md-6 col-lg-4 d-flex justify-content-center alert alert-danger\" role=\"alert\">\n                    <strong>Erreur!</strong>&nbsp; Oups il y a eu un problème.\n                </span>\n                <span className=\"col col-sm-2 col-md-3 col-lg-4\"></span>\n            </div>\n        )\n    }\n     \n    //rque : on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n    return (\n        <div className=\"text-center\">\n            {/* question */}\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            \n            {isLoading ? (\n                <div className=\"spinner-border\" role=\"status\"></div>\n            ) : (\n                <div className=\"mt-5\">{surveyData && surveyData[questionNumberInt]}</div>\n            )}\n            \n            {/* boutons Oui et Non */}\n            <div className=\"row mt-5 justify-content-center\">\n                <button id=\"buttonTrue\" className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" onClick={(e) => saveReply(e, true)}>Oui</button>\n                <div className=\"col-auto\"></div>\n                <button id=\"buttonFalse\" className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey button\" onClick={(e) => saveReply(e, false)}>Non</button>\n            </div>\n            \n            {/* liens */}\n            <div className=\"mt-5\">\n                {questionNumberInt !== 1 && <Link className=\"mx-5 link\" to={`/survey/${previous}`} onClick={(e) => test(e)}>Précédente</Link>}\n                {surveyData && surveyData[questionNumberInt + 1] && <Link className=\"mx-5 link\" to={`/survey/${next}`} onClick={(e) => test(e)}>Suivante</Link>}\n                {surveyData && !(surveyData[questionNumberInt + 1]) && <Link className=\"mx-5 link\" to=\"/results\">Résultats</Link>}\n            </div>\n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}