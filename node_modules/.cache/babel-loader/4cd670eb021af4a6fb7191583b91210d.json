{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\styles\\\\DynamicStyle.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ThemeContext } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledDynamicStyle = createGlobalStyle`\n    body {\n        font-family: 'Trebuchet MS', Helvetica, sans-serif;\n\n        background-color: ${_ref => {\n  let {\n    isDarkMode\n  } = _ref;\n  return isDarkMode ? '#2F2E41' : 'white';\n}};\n    }\n`;\n_c = StyledDynamicStyle;\n\nfunction DynamicStyle() {\n  _s();\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(StyledDynamicStyle, {\n    isDarkMode: theme === 'dark'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DynamicStyle, \"LidUGjXGvl6nqLnPI8yC77ot4bM=\");\n\n_c2 = DynamicStyle;\nexport default DynamicStyle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledDynamicStyle\");\n$RefreshReg$(_c2, \"DynamicStyle\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/styles/DynamicStyle.jsx"],"names":["useContext","createGlobalStyle","ThemeContext","StyledDynamicStyle","isDarkMode","DynamicStyle","theme"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,kBAAkB,GAAGF,iBAAkB;AAC7C;AACA;AACA;AACA,4BAA4B;AAAA,MAAC;AAAEG,IAAAA;AAAF,GAAD;AAAA,SAClBA,UAAU,GAAG,SAAH,GAAe,OADP;AAAA,CACe;AAC3C;AACA,CAPA;KAAMD,kB;;AASN,SAASE,YAAT,GAAwB;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,YAAD,CAA5B;AACA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEI,KAAK,KAAK;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAHQD,Y;;MAAAA,Y;AAKT,eAAeA,YAAf","sourcesContent":["import { useContext } from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { ThemeContext } from '../context'\n\nconst StyledDynamicStyle = createGlobalStyle`\n    body {\n        font-family: 'Trebuchet MS', Helvetica, sans-serif;\n\n        background-color: ${({ isDarkMode }) =>\n          isDarkMode ? '#2F2E41' : 'white'};\n    }\n`\n\nfunction DynamicStyle() {\n  const { theme } = useContext(ThemeContext)\n  return <StyledDynamicStyle isDarkMode={theme === 'dark'} />\n}\n\nexport default DynamicStyle"]},"metadata":{},"sourceType":"module"}