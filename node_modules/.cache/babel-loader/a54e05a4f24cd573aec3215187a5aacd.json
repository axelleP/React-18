{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\Survey.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom'; //useParams pour récupérer les params de l'url\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../styles/Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  //récupère le n° de la question actuelle\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber); //parseInt : convertit en entier\n  //numéro de question suivant et précédent\n\n  const previous = questionNumberInt - 1;\n  const next = questionNumberInt + 1; //questions\n\n  const [surveyData, setSurveyData] = useState({}); //loader :: affiche un loader si la page met du temps à charger la question\n\n  const [isDataLoading, setDataLoading] = useState(false); //récuppère les questions par l'API dont l'adresse est http://localhost:8000\n\n  useEffect(() => {\n    setDataLoading(true);\n\n    sleep = milliseconds => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds));\n    };\n\n    this.sleep(5000).then(r => {// do something\n    });\n    fetch(`http://localhost:8000/survey`).then(response => response.json() //convertit la réponse en données JSON\n    .then(_ref => {\n      let {\n        surveyData\n      } = _ref;\n      //traite les données reçues\n      setSurveyData(surveyData);\n    }).catch(error => console.log(error)) //attrape les erreurs lors de l’appel de l’API s'il y en a\n    );\n    setDataLoading(false);\n  }, []); //[] : exécute un effet uniquement au premier rendu du composant\n  //console.log(surveyData)\n  //on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"underline-purple\",\n      children: [\"Question \", questionNumberInt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isDataLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: surveyData[questionNumberInt]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey btnSurvey\",\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 p-3 mx-2 btn rounded-pill bg-grey btnSurvey\",\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [questionNumberInt !== 1 && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${previous}`,\n        children: \"Pr\\xE9c\\xE9dente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        className: \"mx-5 link\",\n        to: `/survey/${next}`,\n        children: \"Suivante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        className: \"mx-5 link\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Survey, \"ojhW916f2rbCuOu1TKQdfP7pRdE=\", false, function () {\n  return [useParams];\n});\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["C:/wamp64/www/shiny-agency/src/pages/Survey/Survey.jsx"],"names":["useParams","useState","useEffect","Link","Survey","questionNumber","questionNumberInt","parseInt","previous","next","surveyData","setSurveyData","isDataLoading","setDataLoading","sleep","milliseconds","Promise","resolve","setTimeout","then","r","fetch","response","json","catch","error","console","log"],"mappings":"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","sourcesContent":["import { useParams } from 'react-router-dom'//useParams pour récupérer les params de l'url\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../styles/Survey.css';\n\nfunction Survey() {\n    //récupère le n° de la question actuelle\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)//parseInt : convertit en entier\n    //numéro de question suivant et précédent\n    const previous = questionNumberInt - 1\n    const next = questionNumberInt + 1\n    //questions\n    const [surveyData, setSurveyData] = useState({})\n    //loader :: affiche un loader si la page met du temps à charger la question\n    const [isDataLoading, setDataLoading] = useState(false)\n    \n    \n    \n    //récuppère les questions par l'API dont l'adresse est http://localhost:8000\n    useEffect(() => {\n       setDataLoading(true)\n       sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n       this.sleep(5000).then(r => {\n            // do something\n      \t    })\n        fetch(`http://localhost:8000/survey`)\n            .then((response) => response.json()//convertit la réponse en données JSON\n            .then(({ surveyData }) => {//traite les données reçues\n                setSurveyData(surveyData)\n            })\n            .catch((error) => console.log(error))//attrape les erreurs lors de l’appel de l’API s'il y en a\n        )\n        setDataLoading(false)\n     }, [])//[] : exécute un effet uniquement au premier rendu du composant\n     \n    //console.log(surveyData)\n     \n    //on utilise le caractère ` en jsx pour concaténer une chaîne et une variable\n    return (\n        <div className=\"text-center\">\n            <h1 className=\"underline-purple\">Question {questionNumberInt}</h1>\n            \n            {isDataLoading ? (\n                <div class=\"spinner-border\" role=\"status\"></div>\n            ) : (\n                <div className=\"mt-5\">{surveyData[questionNumberInt]}</div>\n            )}\n            \n            \n            \n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey btnSurvey\">Oui</div>\n                <div className=\"col-auto\"></div>\n                <div className=\"col-2 p-3 mx-2 btn rounded-pill bg-grey btnSurvey\">Non</div>\n            </div>\n            \n            {/* liens */}\n            <div className=\"mt-5\">\n                {/* affiche Précédente si on est pas à la question 1 */ }\n                {questionNumberInt !== 1 && <Link className=\"mx-5 link\" to={`/survey/${previous}`}>Précédente</Link>}\n                {/* affiche soit Suivante soit Résultats selon si la question +1 existe */}\n                {surveyData[questionNumberInt + 1] ? (\n                    <Link className=\"mx-5 link\" to={`/survey/${next}`}>Suivante</Link>\n                ) : (\n                    <Link to=\"/results\" className=\"mx-5 link\">Résultats</Link>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}